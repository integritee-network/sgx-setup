##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

server {
{% block server_begin %}{% endblock %}
{% block server_basic %}
    listen {{ item.listen | default('80') }} default_server;
    listen [::]:{{ item.listen | default('80') }} default_server;
{% if item.server_name is defined %}
    server_name {{ item.server_name }};
{% endif %}
{% if item.return is defined %}
    return {{ item.return }};
{% endif %}
{% endblock %}
}

# reverse secure websocket for substrate nodes
include snippets/substrate_wss_default.conf;


{% if item.listen_ssl is defined %}
server {
{% block SSL_Configuration %}
    # SSL configuration
    #
    listen {{ item.listen_ssl }};
    listen [::]:{{ item.listen_ssl }} default_server;
    server_name {{ item.server_name }};

    ssl_certificate {{item.ssl_cert_pem}};
    ssl_certificate_key {{item.ssl_cert_key}};
    ssl_ciphers {{item.ssl_ciphers}};
    ssl_protocols {{item.ssl_protocols}};

    #
    # Note: You should disable gzip for SSL traffic.
    # See: https://bugs.debian.org/773332
    #
    # Read up on ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782
    #
    # Self signed certs generated by the ssl-cert package
    # Don't use them in a production server!
    #
    # include snippets/snakeoil.conf;

{% if item.root is defined %}
    root {{ item.root }};
{% endif %}

    # Add index.php to the list if you are using PHP
    index {{ item.index | default('index.html index.htm') }};

    server_name _;
{% if item.error_page is defined %}
    error_page {{ item.error_page }};
{% endif %}
{% if item.access_log is defined %}
    access_log {{ item.access_log }};
{% endif %}
{% if item.error_log is defined %}
    error_log {{ item.error_log }} error;
{% endif %}
{% if item.extra_parameters is defined %}
    {{ item.extra_parameters|indent(4) }}
{% endif %}
{% endblock %}
}
{% endif %}
